<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.renewable.gateway.dao.InclinationMapper">
    <resultMap id="BaseResultMap" type="com.renewable.gateway.pojo.Inclination">
        <constructor>
            <idArg column="id" jdbcType="BIGINT" javaType="java.lang.Long"/>
            <arg column="angle_x" jdbcType="DOUBLE" javaType="java.lang.Double"/>
            <arg column="angle_y" jdbcType="DOUBLE" javaType="java.lang.Double"/>
            <arg column="angle_total" jdbcType="DOUBLE" javaType="java.lang.Double"/>
            <arg column="temperature" jdbcType="DOUBLE" javaType="java.lang.Double"/>
            <arg column="create_time" jdbcType="TIMESTAMP" javaType="java.util.Date"/>
            <arg column="version" jdbcType="VARCHAR" javaType="java.lang.String"/>
            <arg column="sensor_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
        </constructor>
    </resultMap>
    <sql id="Base_Column_List">
    id, angle_x, angle_y, angle_total, temperature, create_time, version, sensor_id
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from sensor_inclination
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sensor_inclination
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.renewable.gateway.pojo.Inclination">
    insert into sensor_inclination (id, angle_x, angle_y, 
      angle_total, temperature, create_time, 
      version, sensor_id)
    values (#{id,jdbcType=BIGINT}, #{angleX,jdbcType=DOUBLE}, #{angleY,jdbcType=DOUBLE}, 
      #{angleTotal,jdbcType=DOUBLE}, #{temperature,jdbcType=DOUBLE}, now(),
      #{version,jdbcType=VARCHAR}, #{sensorId,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.renewable.gateway.pojo.Inclination">
        insert into sensor_inclination
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="angleX != null">
                angle_x,
            </if>
            <if test="angleY != null">
                angle_y,
            </if>
            <if test="angleTotal != null">
                angle_total,
            </if>
            <if test="temperature != null">
                temperature,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="version != null">
                version,
            </if>
            <if test="sensorId != null">
                sensor_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="angleX != null">
                #{angleX,jdbcType=DOUBLE},
            </if>
            <if test="angleY != null">
                #{angleY,jdbcType=DOUBLE},
            </if>
            <if test="angleTotal != null">
                #{angleTotal,jdbcType=DOUBLE},
            </if>
            <if test="temperature != null">
                #{temperature,jdbcType=DOUBLE},
            </if>
            <if test="createTime != null">
                now(),
            </if>
            <if test="version != null">
                #{version,jdbcType=VARCHAR},
            </if>
            <if test="sensorId != null">
                #{sensorId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.renewable.gateway.pojo.Inclination">
        update sensor_inclination
        <set>
            <if test="angleX != null">
                angle_x = #{angleX,jdbcType=DOUBLE},
            </if>
            <if test="angleY != null">
                angle_y = #{angleY,jdbcType=DOUBLE},
            </if>
            <if test="angleTotal != null">
                angle_total = #{angleTotal,jdbcType=DOUBLE},
            </if>
            <if test="temperature != null">
                temperature = #{temperature,jdbcType=DOUBLE},
            </if>
            <if test="createTime != null">
                create_time = now(),
            </if>
            <if test="version != null">
                version = #{version,jdbcType=VARCHAR},
            </if>
            <if test="sensorId != null">
                sensor_id = #{sensorId,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.renewable.gateway.pojo.Inclination">
    update sensor_inclination
    set angle_x = #{angleX,jdbcType=DOUBLE},
      angle_y = #{angleY,jdbcType=DOUBLE},
      angle_total = #{angleTotal,jdbcType=DOUBLE},
      temperature = #{temperature,jdbcType=DOUBLE},
      create_time = now(),
      version = #{version,jdbcType=VARCHAR},
      sensor_id = #{sensorId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <select id="selectList" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sensor_inclination
        order by id asc
    </select>
    <select id="selectListByTime" parameterType="map" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sensor_inclination
        <![CDATA[
    where create_time <=#{endTime}
    ]]>
        and create_time &gt;=#{startTime}
    </select>
    <select id="selectNextByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sensor_inclination
        where id = (select min(id) from sensor_inclination where id > #{id,jdbcType=BIGINT})
    </select>
    <select id="selectNewByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sensor_inclination
        where id = (select max(id) from sensor_inclination)
    </select>
    <select id="selectPeakByIdArea" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sensor_inclination
        where angle_total =( select
        max(angle_total)
        from sensor_inclination
        <![CDATA[
    where id <=#{endId}
    ]]>
        and id &gt;=#{startId})
        order by id desc
        limit 1
    </select>
    <select id="selcetPeakByTimeArea" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from sensor_inclination
        where angle_total = (
        select
        max(angle_total)
        from sensor_inclination
        <![CDATA[
      where create_time <=#{endTime}
      ]]>
        and create_time &gt;=#{startTime}
        and sensor_id = #{sensorId}
        )
        <![CDATA[
    and create_time <=#{endTime}
    ]]>
        and create_time &gt;=#{startTime}
        and sensor_id = #{sensorId}
        limit 1
    </select>

</mapper>